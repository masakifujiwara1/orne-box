<?xml version="1.0"?>
<robot xmlns:xacro="http://ros.org/wiki/xacro" name="orne_box">
  <xacro:property name="PI" value="3.1415926535897931"/>
  <xacro:arg name="laser_visual" default="true"/>
  <xacro:arg name="imu_visual" default="false"/>
  <xacro:arg name="ignition_gazebo" default="false"/>
  <xacro:arg name="enable_camera" default="false"/>
  <gazebo reference="left_caster_wheel_link">
    <mu1>0.75</mu1>
    <mu2>0.75</mu2>
    <kp>1000000.0</kp>
    <kd>100.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>1.0</maxVel>
  </gazebo>
  <gazebo reference="right_caster_wheel_link">
    <mu1>0.75</mu1>
    <mu2>0.75</mu2>
    <kp>1000000.0</kp>
    <kd>100.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>1.0</maxVel>
  </gazebo>
  <gazebo reference="left_wheel">
    <mu1>0.85</mu1>
    <mu2>0.85</mu2>
    <kp>1000000.0</kp>
    <kd>100.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>1.0</maxVel>
    <material>Gazebo/White</material>
  </gazebo>
  <gazebo reference="right_wheel">
    <mu1>0.85</mu1>
    <mu2>0.85</mu2>
    <kp>1000000.0</kp>
    <kd>100.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>1.0</maxVel>
    <material>Gazebo/White</material>
  </gazebo>

  <gazebo reference="omnidirectional_camera_front_frame">
      <sensor type="wideanglecamera" name="camera">
        <camera>
          <horizontal_fov>3.14</horizontal_fov>
          <image>
            <width>640</width>
            <height>640</height>
          </image>
          <clip>
            <near>0.1</near>
            <far>50</far>
          </clip>
          <lens>
            <!-- <type>gnomonical</type> -->
            <type>custom</type>
            <custom_function>
              <c1>0.5</c1>
              <c2>4.0</c2>
              <f>1.0</f>
              <fun>cos</fun>
            </custom_function>
            <scale_to_hfov>true</scale_to_hfov>
            <cutoff_angle>3.14</cutoff_angle>
            <env_texture_size>512</env_texture_size>
          </lens>
        </camera>
        <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>10.0</updateRate>
        <cameraName>camera</cameraName>
        <frameName>camera_rgb_optical_front_frame</frameName>
        <imageTopicName>rgb/image_raw_front</imageTopicName>
        <cameraInfoTopicName>rgb/camera_info</cameraInfoTopicName>
        <CxPrime></CxPrime>
        <Cx></Cx>
        <Cy></Cy>
        <focalLength></focalLength>
        <hackBaseline>0.7</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
      </sensor>
  </gazebo>

  <joint name="omni_camera_joint" type="fixed">
    <origin xyz="0.23 0 0.6" rpy="0 0 0"/>
    <parent link="base_link"/>
    <child link="camera_link"/>
  </joint>

  <link name="camera_link">
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="0.015 0.030 0.027"/>
      </geometry>
    </collision>
  </link>

  <joint name="camera_rgb_front_joint" type="fixed">
    <origin xyz="0 0 0" rpy="1.57 0 0"/>
    <parent link="camera_link"/>
    <child link="omnidirectional_camera_front_frame"/>
  </joint>
  <link name="omnidirectional_camera_front_frame"/>

  <joint name="camera_rgb_optical_front_joint" type="fixed">
    <origin xyz="0 0 0" rpy="0 0 0"/>
    <parent link="omnidirectional_camera_front_frame"/>
    <child link="camera_rgb_optical_front_frame"/>
  </joint>
  <link name="camera_rgb_optical_front_frame"/>

  <joint name="camera_rgb_back_joint" type="fixed">
    <origin xyz="0 0 0" rpy="-1.57 0 3.14"/>
    <parent link="camera_link"/>
    <child link="omnidirectional_camera_back_frame"/>
  </joint>
  <link name="omnidirectional_camera_back_frame"/>

  <joint name="camera_rgb_optical_back_joint" type="fixed">
    <origin xyz="0 0 0" rpy="0 0 0"/>
    <parent link="omnidirectional_camera_back_frame"/>
    <child link="camera_rgb_optical_back_frame"/>
  </joint>
  <link name="camera_rgb_optical_back_frame"/>

  <gazebo reference="omnidirectional_camera_front_frame">
      <sensor type="wideanglecamera" name="camera">
        <camera>
          <horizontal_fov>3.14</horizontal_fov>
          <image>
            <width>640</width>
            <height>640</height>
          </image>
          <clip>
            <near>0.1</near>
            <far>50</far>
          </clip>
          <lens>
            <!-- <type>gnomonical</type> -->
            <type>custom</type>
            <custom_function>
              <c1>0.5</c1>
              <c2>4.0</c2>
              <f>1.0</f>
              <fun>cos</fun>
            </custom_function>
            <scale_to_hfov>true</scale_to_hfov>
            <cutoff_angle>3.14</cutoff_angle>
            <env_texture_size>512</env_texture_size>
          </lens>
        </camera>
        <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>10.0</updateRate>
        <cameraName>camera</cameraName>
        <frameName>camera_rgb_optical_front_frame</frameName>
        <imageTopicName>rgb/image_raw_front</imageTopicName>
        <cameraInfoTopicName>rgb/camera_info</cameraInfoTopicName>
        <CxPrime></CxPrime>
        <Cx></Cx>
        <Cy></Cy>
        <focalLength></focalLength>
        <hackBaseline>0.7</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
      </sensor>
  </gazebo>

  <gazebo reference="omnidirectional_camera_back_frame">
      <sensor type="wideanglecamera" name="camera">
        <camera>
          <horizontal_fov>3.14</horizontal_fov>
          <image>
            <width>640</width>
            <height>640</height>
          </image>
          <clip>
            <near>0.1</near>
            <far>50</far>
          </clip>
          <lens>
            <!-- <type>gnomonical</type> -->
            <type>custom</type>
            <custom_function>
              <c1>0.5</c1>
              <c2>4.0</c2>
              <f>1.0</f>
              <fun>cos</fun>
            </custom_function>
            <scale_to_hfov>true</scale_to_hfov>
            <cutoff_angle>3.14</cutoff_angle>
            <env_texture_size>512</env_texture_size>
          </lens>
        </camera>
        <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>10.0</updateRate>
        <cameraName>camera</cameraName>
        <frameName>camera_rgb_optical_back_frame</frameName>
        <imageTopicName>rgb/image_raw_back</imageTopicName>
        <cameraInfoTopicName>rgb/camera_info</cameraInfoTopicName>
        <CxPrime></CxPrime>
        <Cx></Cx>
        <Cy></Cy>
        <focalLength></focalLength>
        <hackBaseline>0.7</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
      </sensor>
  </gazebo>

  <joint name="rfans_camera_rgb_joint" type="fixed">
    <parent link="base_link"/>
    <child link="rfans_camera_rgb_optical_frame"/>
    <origin xyz="0.23 0.0 0.8" rpy="0 -0.05 0"/>
  </joint>
  <link name="rfans_camera_rgb_optical_frame"/>
  <gazebo reference="rfans_camera_rgb_optical_frame">
    <sensor type="camera" name="camera2">
      <always_on>false</always_on>
      <update_rate>30</update_rate>
      <visualize>false</visualize>
      <camera name="rfans_head">
        <horizontal_fov>1.571</horizontal_fov>
        <image>
          <width>640</width>
          <height>480</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.03</near>
          <far>100</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>

      <plugin name="rfans_camera_controller" filename="libgazebo_ros_camera.so">
        <!-- <topicName>camera_right</topicName> -->
        <alwaysOn>false</alwaysOn>
        <updateRate>30.0</updateRate>
        <cameraName>rfans_camera</cameraName>
        <frameName>camera_rgb_optical_frame</frameName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>/camera_info</cameraInfoTopicName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>

  <joint name="camera_rgb_joint" type="fixed">
    <parent link="base_link"/>
    <child link="camera_rgb_optical_frame"/>
    <origin xyz="-0.08 0.0 0.8" rpy="0 -0.05 0"/>
  </joint>
  <link name="camera_rgb_optical_frame"/>
  <gazebo reference="camera_rgb_optical_frame">
    <sensor type="camera" name="camera1">
      <always_on>true</always_on>
      <update_rate>30</update_rate>
      <visualize>true</visualize>
      <camera name="head">
        <horizontal_fov>1.571</horizontal_fov>
        <image>
          <width>640</width>
          <height>480</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.03</near>
          <far>100</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>

      <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
        <!-- <topicName>camera_right</topicName> -->
        <alwaysOn>true</alwaysOn>
        <updateRate>30.0</updateRate>
        <cameraName>camera</cameraName>
        <frameName>camera_rgb_optical_frame</frameName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>/camera_info</cameraInfoTopicName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>
  <!-- @TODO More clear boolean operation -->
  <xacro:if value="${'$(arg ignition_gazebo)' == 'false'}">
    <gazebo>
      <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
        <robotNamespace>orne_box</robotNamespace>
        <robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType>
      </plugin>
    </gazebo>
    <gazebo reference="base_link">
      <material>Gazebo/Orange</material>
    </gazebo>
    <gazebo reference="imu_link">
      <sensor type="imu" name="imu">
        <always_on>true</always_on>
        <visualize>$(arg imu_visual)</visualize>
      </sensor>
      <material>Gazebo/Green</material>
    </gazebo>
    <!-- hokuyo -->
    <gazebo reference="hokuyo_link">
      <sensor type="gpu_ray" name="head_hokuyo_sensor">
        <pose>0 0 0 0 0 0</pose>
        <visualize>$(arg laser_visual)</visualize>
        <update_rate>40</update_rate>
        <ray>
          <scan>
            <horizontal>
              <samples>880</samples>
              <resolution>0.25</resolution>
              <min_angle>${-PI/180*110}</min_angle>
              <max_angle>${ PI/180*110}</max_angle>
            </horizontal>
            <vertical>
              <samples>1</samples>
              <resolution>1</resolution>
            </vertical>
          </scan>
          <range>
            <min>0.10</min>
            <max>30.0</max>
            <resolution>0.01</resolution>
          </range>
          <noise>
            <type>gaussian</type>
            <!-- Noise parameters based on published spec for Hokuyo laser
                 achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
                 stddev of 0.01m will put 99.7% of samples within 0.03m of the true
                 reading. -->
            <mean>0.0</mean>
            <stddev>0.01</stddev>
          </noise>
        </ray>
        <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_gpu_laser.so">
          <topicName>/scan</topicName>
          <frameName>hokuyo_link</frameName>
        </plugin>
      </sensor>
      <material>Gazebo/Black</material>
    </gazebo>
  </xacro:if>
  <xacro:if value="$(arg ignition_gazebo)">
    <gazebo>
      <static>false</static>
      <selfCollide>true</selfCollide>
      <plugin filename="ignition-gazebo-joint-state-publisher-system" name="ignition::gazebo::systems::JointStatePublisher">
        <topic>model/orne_box/joint_states</topic>
      </plugin>
      <plugin filename="ignition-gazebo-pose-publisher-system" name="ignition::gazebo::systems::PosePublisher">
        <publish_link_pose>true</publish_link_pose>
        <publish_collision_pose>true</publish_collision_pose>
        <publish_visual_pose>false</publish_visual_pose>
        <publish_nested_model_pose>false</publish_nested_model_pose>
      </plugin>
      <plugin filename="ignition-gazebo-diff-drive-system" name="ignition::gazebo::systems::DiffDrive">
        <left_joint>left_wheel_joint</left_joint>
        <right_joint>right_wheel_joint</right_joint>
        <wheel_separation>0.38</wheel_separation>
        <wheel_radius>0.152</wheel_radius>
        <odom_publish_frequency>30</odom_publish_frequency>
        <max_angular_acceleration>3.14</max_angular_acceleration>
        <min_angular_acceleration>-3.14</min_angular_acceleration>
        <max_angular_velocity>1.57</max_angular_velocity>
        <min_angular_velocity>-1.57</min_angular_velocity>
      </plugin>
      <plugin filename="libignition-gazebo-wheel-slip-system.so" name="ignition::gazebo::systems::WheelSlip">
        <wheel link_name="left_caster_wheel_link">
          <slip_compliance_lateral>0.2</slip_compliance_lateral>
          <slip_compliance_longitudinal>0.15</slip_compliance_longitudinal>
          <wheel_normal_force>20.6</wheel_normal_force>
          <wheel_radius>0.04</wheel_radius>
        </wheel>
        <wheel link_name="right_caster_wheel_link">
          <slip_compliance_lateral>0.2</slip_compliance_lateral>
          <slip_compliance_longitudinal>0.15</slip_compliance_longitudinal>
          <wheel_normal_force>20.6</wheel_normal_force>
          <wheel_radius>0.04</wheel_radius>
        </wheel>
        <wheel link_name="wheel_left_link">
          <slip_compliance_lateral>0.7</slip_compliance_lateral>
          <slip_compliance_longitudinal>0.55</slip_compliance_longitudinal>
          <wheel_normal_force>294.6</wheel_normal_force>
          <wheel_radius>0.15</wheel_radius>
        </wheel>
        <wheel link_name="wheel_right_link">
          <slip_compliance_lateral>0.7</slip_compliance_lateral>
          <slip_compliance_longitudinal>0.55</slip_compliance_longitudinal>
          <wheel_normal_force>294.6</wheel_normal_force>
          <wheel_radius>0.15</wheel_radius>
        </wheel>
      </plugin>
    </gazebo>
    <gazebo reference="hokuyo_link">
      <sensor type="gpu_lidar" name="head_hokuyo_sensor">
        <pose>0 0 0 0 0 0</pose>
        <visualize>$(arg laser_visual)</visualize>
        <update_rate>40</update_rate>
        <topic>model/orne_box/hokuyo_scan</topic>
        <lidar>
          <scan>
            <horizontal>
              <samples>361</samples>
              <resolution>1</resolution>
              <min_angle>${-PI/180*110}</min_angle>
              <max_angle>${ PI/180*110}</max_angle>
            </horizontal>
            <vertical>
              <samples>1</samples>
              <resolution>1</resolution>
            </vertical>
          </scan>
          <range>
            <min>0.10</min>
            <max>30.0</max>
            <resolution>0.01</resolution>
          </range>
          <noise>
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>0.01</stddev>
          </noise>
        </lidar>
      </sensor>
    </gazebo>
    <gazebo reference="imu_link">
      <sensor name="imu_link" type="imu">
        <always_on>1</always_on>
        <update_rate>200</update_rate>
        <visualize>false</visualize>
        <topic>model/orne_box/imu</topic>
        <imu>
          <angular_velocity>
            <x>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>0.1</stddev>
              </noise>
            </x>
            <y>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>0.1</stddev>
              </noise>
            </y>
            <z>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>0.2</stddev>
              </noise>
            </z>
          </angular_velocity>
          <linear_acceleration>
            <x>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>0.1</stddev>
              </noise>
            </x>
            <y>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>0.1</stddev>
              </noise>
            </y>
            <z>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>0.2</stddev>
              </noise>
            </z>
          </linear_acceleration>
        </imu>
      </sensor>
    </gazebo>
    <xacro:if value="$(arg enable_camera)">
      <gazebo reference="zed_camera_center">
        <sensor name="zed_camera_center" type="camera">
          <always_on>1</always_on>
          <update_rate>15</update_rate>
          <visualize>false</visualize>
          <topic>model/orne_box/zed_node/image</topic>
          <camera>
            <horizontal_fov>1.919805</horizontal_fov>
            <image>
              <width>1920</width>
              <height>1080</height>
            </image>
            <clip>
              <near>0.01</near>
              <far>50</far>
            </clip>
            <noise>
              <type>gaussian</type>
              <mean>0.0</mean>
              <stddev>0.025</stddev>
            </noise>
          </camera>
        </sensor>
        <sensor name="zed_depth_camera_center" type="depth_camera">
          <pose>0 0 -0.8 3.14 -0.38 0</pose>
          <always_on>1</always_on>
          <update_rate>15</update_rate>
          <visualize>false</visualize>
          <topic>model/orne_box/zed_node/depth_image</topic>
          <camera>
            <horizontal_fov>1.919805</horizontal_fov>
            <image>
              <width>1280</width>
              <height>720</height>
            </image>
            <clip>
              <near>0.4</near>
              <far>6</far>
            </clip>
            <noise>
              <type>gaussian</type>
              <mean>0.0</mean>
              <stddev>0.1</stddev>
            </noise>
          </camera>
        </sensor>
      </gazebo>
    </xacro:if>
    <gazebo reference="gnss_link">
      <sensor name="gnss_link" type="navsat">
        <always_on>1</always_on>
        <update_rate>1</update_rate>
        <topic>model/orne_box/navsat</topic>
      </sensor>
    </gazebo>
  </xacro:if>
</robot>
